package AST;
/* Generated By:JJTree: Do not edit this line. ASTAssignment.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
import org.llvm.*;
public
class ASTAssignment extends SimpleNode {
  public SimpleNode Lexp, Rexp;
  public ASTAssignment(int id) {
    super(id);
  }

  public ASTAssignment(MyLang p, int id) {
    super(p, id);
  }
  
  public ASTContent code_gen(ASTContext context) throws Exception{
	  Lexp = (SimpleNode)children[0];
	  Rexp = (SimpleNode)children[1];
	  ASTContent L = Lexp.code_gen(context);
	  ASTContent R = Rexp.code_gen(context).getPValue();
	  if(L.type != IDENTIFIER && L.type != ARRAY)
		  throw new Exception("Left is not IDENTIFIER!");
	  if(L.type == ARRAY && R.type == ARRAY){
		  int length = ((ASTNewArrayContent)R).length;
		  int type = ((ASTNewArrayContent)R).info_type;
		  if(type != L.info_type){
			  throw new Exception("Type Conflict.");
		  }
		  Value tmp = MyLang.module.addGlobal(ty_int.arrayType(ASTContent.getTypeRef(type).type(), length), "tmp");
		  tmp.setInitializer(ASTContent.getTypeZero(type));
		  for(int i = 0; i < length; i++){
			  Value ptr = MyLang.builder.buildInBoundsGEP(R.value, "tmp", ty_int.constInt(0, true),ty_int.constInt(i, true));
			  Value val = MyLang.builder.buildLoad(ptr, "tmp0");
			  Value ptr2 = MyLang.builder.buildInBoundsGEP(tmp, "tmp",ty_int.constInt(0, true),ty_int.constInt(i, true));
			  MyLang.builder.buildStore(val, ptr2);
		  }
		  L.value = tmp;
		    ((ASTArrayContent)L).length = ty_int.constInt(length, true);
			Value tmp1 = MyLang.module.addGlobal(ty_int, "tmp");
			tmp1.setInitializer(ASTContent.getTypeZero(47));
			MyLang.builder.buildStore(((ASTArrayContent)L).length, tmp1);
			Value val = tmp1;
		  return new ASTArrayContent(tmp, ARRAY, type, val);
	  }
	  MyLang.builder.buildStore(R.castTo(L.info_type), L.value);
	  return L;
  }

}
/* JavaCC - OriginalChecksum=58e748ed4e224b2d4aa77a4033ea2b5f (do not edit this line) */