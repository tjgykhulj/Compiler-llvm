package AST;
/* Generated By:JJTree: Do not edit this line. ASTLogicalOrExpression.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTLogicalOrExpression extends SimpleNode {
  public String op;
  public SimpleNode Lexp, Rexp;
  public ASTLogicalOrExpression(int id) {
    super(id);
  }

  public ASTLogicalOrExpression(MyLang p, int id) {
    super(p, id);
  }
  public ASTContent code_gen(ASTContext context) throws Exception{
//	  op = jjtGetValue().toString();
	  Lexp = (SimpleNode)children[0];
	  Rexp = (SimpleNode)children[1];
	  ASTContent L = Lexp.code_gen(context).getPValue();
	  ASTContent R = Rexp.code_gen(context).getPValue();
	  if(!(L.isBoolean() && R.isBoolean()))
		  throw new Exception("LogicalOr Not boolean.");
	  if(true){
		  cnt++;
		  return new ASTContent(MyLang.builder.buildOr(L.value, R.value, String.valueOf(cnt)), BOOLEAN_LITERAL);
	  }
	  throw new Exception("LogicalOr unknown error.");
  }
}
/* JavaCC - OriginalChecksum=b9a478357c08944077f36c00b6d48663 (do not edit this line) */
